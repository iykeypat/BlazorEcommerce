@inject ICategoryService CategoryService
@implements IDisposable

<style>
    .navbar-toggler {
        color: rgba(255, 255, 255, 0.1);
    }


    .top-row {
        height: 3.5rem;
        background-color: rgba(0,0,0,0.4);
    }

    .navbar-brand {
        font-size: 1.1rem;
    }

    .oi {
        width: 2rem;
        font-size: 1.1rem;
        vertical-align: text-top;
        top: -2px;
    }

    .nav-item {
        font-size: 0.9rem;
        padding-bottom: 0.5rem;
        padding-top: 0.5rem;
    }

        .nav-item ::deep a {
            color: #d7d7d7;
            border-radius: 4px;
            height: 3rem;
            display: flex;
            align-items: center;
            line-height: 3rem;
        }

            .nav-item ::deep a.active {
                background-color: rgba(255,255,255,0.25);
                color: white;
            }

            .nav-item ::deep a:hover {
                background-color: rgba(255,255,255,0.1);
                color: white;
            }

    .flex-nav {
        flex-direction: column;
    }
</style>

<div class="top-row ps-3 navbar navbar-dark navbar-toggler-wrapper">
    <div class="container-fluid">
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>


<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <nav class="flex-nav">
        <div class="nav-item px-2">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                Home
            </NavLink>
        </div>
        @foreach (var category in CategoryService.Categories)
        {
            <div class="nav-item px-2">
                <NavLink class="nav-link" href="@category.Url">
                    @category.Name
                </NavLink>
            </div>
        }
    </nav>
</div>

@code {
    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    protected override async Task OnInitializedAsync()
    {
        await CategoryService.GetCategories();
        //CategoryService.OnChange += StateHasChanged;
    }

    public void Dispose()
    {
        //CategoryService.OnChange -= StateHasChanged;
    }
}
