@inject ICategoryService CategoryService
@implements IDisposable


<div class="ps-3 navbar navbar-dark navbar-toggler-wrapper show-button">
    <div class="container-fluid">
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>


<div class="@NavMenuCssClass col pb-3 pt-3 ps-4 pe-3">


    <a href="/"><span style="color: #feb20a; font-size:3rem; font-weight:600;">Shop</span> <span style="color: white; font-size:3rem; font-weight:600;">Trip </span></a>


    <div class="nav-bar-menu">

        <div>
            <a class="nav-link" href="/">
                Home
            </a>
        </div>
        @foreach (var category in CategoryService.Categories)
        {
            <div>
                <a class="nav-link" href="@category.Url">
                    @category.Name
                </a>
            </div>
        }
    </div>

</div>


@code {
    private bool collapseNavMenu = false;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    protected override async Task OnInitializedAsync()
    {
        await CategoryService.GetCategories();
        CategoryService.OnChange += StateHasChanged;
    }

    public void Dispose()
    {
        CategoryService.OnChange -= StateHasChanged;
    }
}
