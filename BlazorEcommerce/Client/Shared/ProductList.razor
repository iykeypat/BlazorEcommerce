@inject IProductService productService;
@implements IDisposable


@if (productService.Products == null || productService.Products.Count == 0)
{
    <span> Loading products...</span>
}
else
{
    
<ul class="list-unstyled">
    @foreach (var product in productService.Products)
    {
        <li class="media my-3">
            <div class="media-img-wrapper mr-2">
                <a href="productdetail/@product.Id">
                    <img class="media-img" src="@product.ImageUrl" alt="@product.Title">
                </a>
            </div>
            <div class="media-body">
                <a href="productdetail/@product.Id">
                    <h4 class="mb-0">@product.Title</h4>
                </a>
                <p> @product.Description</p>
                @*<h5 class="price">$@product.Price</h5>*@
            </div>
        </li>
    }

</ul>

}

@code {

    protected override void OnInitialized()
    {
        productService.ProductChanged += StateHasChanged;
    }

    public void Dispose(){
        productService.ProductChanged -= StateHasChanged;
    }
}
