@page "/admin/product-types"
@inject IProductTypeService ProductTypeService
@implements IDisposable
@attribute [Authorize(Roles ="Admin")]

<h3>Product Types</h3>

@foreach (var productType in ProductTypeService.ProductTypes)
{
    if (productType.Editing)
    {
        <EditForm Model="editingProductType" OnSubmit="UpdateProductType">
            <div class="row">
                <div class="col">
                    <InputText @bind-Value="editingProductType.Name" class="form-control"></InputText>
                </div>
                <div class="col">
                    <button class="btn btn-primary" type="submit">
                        <i class="oi oi-data-transfer-upload"></i>
                        Save
                    </button>
                </div>
            </div>
        </EditForm>
    } else
    {
        <div class="row">
            <div class="col">
                @productType.Name
            </div>
            <div class="col">
                <button class="btn btn-primary" @onclick="@(()=> EditProductType(productType))">
                    <i class="oi oi-pencil"></i>
                </button>
            </div>
        </div>
    }

}

<button class="btn btn-primary" @onclick="CreateNewProductType">
    <i class="oi oi-plus"></i> Add new product type
</button>

@code {
    ProductType editingProductType = null;

    //the code in this method runs automatically when this page is loaded
    protected override async Task OnInitializedAsync()
    {
        await ProductTypeService.GetProductTypes();
        ProductTypeService.OnChange += StateHasChanged;
    }

    //This method resets state change in readiness for another time
    public void Dispose()
    {
        ProductTypeService.OnChange -= StateHasChanged;
    }

    //This method is called when admin wants to edit product type
    private void EditProductType(ProductType productType)
    {
        productType.Editing = true;
        editingProductType = productType;
    }

    //this method is called when admin wants to create a new product type
    private void CreateNewProductType()
    {
        editingProductType = ProductTypeService.CreateNewProductType();
    }

    //this method is called when admin wants to update an existing product type
    private async Task UpdateProductType()
    {
        if (editingProductType.IsNew)
        {
            await ProductTypeService.AddProductType(editingProductType);
        } else
        {
            await ProductTypeService.UpdateProductType(editingProductType);
        }

        editingProductType = new ProductType();
    }
}
