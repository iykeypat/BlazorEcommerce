@page "/orders"
@inject IOrderService OrderService
<PageTitle>Orders</PageTitle>

<style>
    .container {
        display: flex;
        padding: 6px;
        border: 1px solid;
        border-color: lightgray;
        border-radius: 6px;
        margin-bottom: 10px;
    }

    .image-wrapper {
        width: 150px;
        text-align: center;
    }

    .image {
        max-height: 150px;
        max-width: 150px;
        padding: 6px;
    }

    .details {
        flex-grow: 1;
        padding: 6px;
    }

    .order-price {
        font-weight: 600;
        font-size: 1.2em;
        text-align: right;
    }

</style>


<h3>Orders</h3>

@if (orders == null)
{
    <span>Loading your orders...</span>
}
else if (orders.Count <= 0)
{
    <span>You have no orders yet.</span>
}
else
{
    foreach (var order in orders)
    {
        <div class="container">
            <div class="image-wrapper">
                <img src="@order.ProductImageUrl" class="image" />
            </div>
            <div class="details">
                <h4>@order.Product</h4>
                <span>@order.OrderDate</span>
                <br />

                <a href="orders/@order.Id">Show more...</a>
            </div>
            <div class="order-price">$@order.TotalPrice</div>
        </div>
    }
}





@code {

    List<OrderOverviewResponse> orders = null;


    protected override async Task OnInitializedAsync()
    {
        orders = await OrderService.GetOrders();
    }

}
