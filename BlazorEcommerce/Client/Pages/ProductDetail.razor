@page "/productdetail/{id:int}"

@inject IProductService ProductService

@if (product == null)
{
    <span> @message </span>
}
else
{
    <div class="media">
        <div class="media-img-wrapper mr-2">
            <img class="media-img" src="@product.ImageUrl" alt="@product.Title" />
        </div>
        <div class="media-body">
            <h2 class="mb-8"> @product.Title</h2>
            <p> @product.Description</p>
            @*<h4 class="price"> $@product.Price</h4>*@
        </div>
    </div>
}


@code {
    private Product? product = null;
    private string message = string.Empty;
    private ServiceResponse<Product> result ;

    [Parameter]
    public int id { get; set; }

    protected  override async Task OnParametersSetAsync()
    {
        this.message = "Loading product...";

        //var result = await ProductService.GetProduct(id);
        result = await ProductService.GetProduct(id);
        //product =  ProductService.Products.Find(x => x.Id == id);
       // product = ProductService.GetProductById(id);

        if (!result.Success)
        {
          this.message = result.Message;
        } else
        {
             
             this.product = result.Data;
        }
    }
}   
